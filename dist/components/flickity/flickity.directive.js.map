{"version":3,"file":"flickity.directive.js","sourceRoot":"","sources":["../../../src/components/flickity/flickity.directive.ts"],"names":[],"mappings":"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","sourcesContent":["declare let require: any;\n\nimport {\n  ElementRef, Directive, OnDestroy, Input, Output, EventEmitter, AfterContentInit\n} from '@angular/core';\n\nimport { FlickityOptions } from \"../../interfaces/flickity-options.interface\";\nimport { AppConfigService } from '../../services/app-config.service';\n\n@Directive({ selector: '[flickity]' })\nexport class FlickityDirective implements AfterContentInit, OnDestroy {\n\n  @Input('flickity') config: FlickityOptions = {};\n  @Output() slideSelect = new EventEmitter<number>();\n  @Output() cellStaticClick = new EventEmitter<number>();\n  @Output() childrenUpdated = new EventEmitter<void>();\n\n  private flkty: any;\n  private appendElements: HTMLElement[] = [];\n  private childrenUpdate;\n  private childrenUpdateInterval = 300;\n  private flickityElement: HTMLElement\n  constructor(private el: ElementRef,\n              private appConfigService: AppConfigService) {\n                this.flickityElement = el.nativeElement\n              }\n\n  ngAfterContentInit(): void {\n    this.init();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy();\n  }\n\n  init() {\n    if (this.appConfigService.isPlatformServer || !this.flickityElement) {\n      return;\n    }\n\n    const Flickity = require('flickity');\n\n    let config = this.config;\n\n    if (this.flkty) {\n      config['initialIndex'] = this.flkty.selectedIndex;\n      this.destroy();\n    }\n\n    this.flkty = new Flickity(this.flickityElement, config);\n\n    this.flkty.on('select', () => {\n      this.slideSelect.emit(this.selectedIndex);\n    });\n\n    this.flkty.on('staticClick', (_event: any, _pointer: any, _cellElement: any, cellIndex: any) => {\n      this.cellStaticClick.emit(cellIndex);\n    });\n\n    this.updateElements();\n\n    setTimeout(() => this.resize(), this.childrenUpdateInterval);\n  }\n\n  destroy() {\n    if (!this.flkty) {\n      return;\n    }\n\n    if (this.childrenUpdate) {\n      clearInterval(this.childrenUpdate);\n      this.childrenUpdate = undefined;\n    }\n\n    this.flkty.destroy();\n  }\n\n  resize() {\n    if (!this.flkty) {\n      return;\n    }\n\n    this.flkty.resize();\n  }\n\n  reposition() {\n    if (!this.flkty) {\n      return;\n    }\n\n    this.flkty.reposition();\n  }\n\n  previous() {\n    if (!this.flkty) {\n      return;\n    }\n\n    this.flkty.previous();\n  }\n\n  previousAvailable(): boolean {\n    if (this.selectedIndex === undefined) {\n      return false;\n    }\n\n    return this.selectedIndex > 0;\n  }\n\n  next() {\n    if (!this.flkty) {\n      return;\n    }\n\n    this.flkty.next();\n  }\n\n  nextAvailable(): boolean {\n    if (this.selectedIndex === undefined || !this.slides) {\n      return false;\n    }\n\n    return this.selectedIndex < this.slides - 1;\n  }\n\n  get selectedIndex(): number {\n    if (!this.flkty) {\n      return;\n    }\n\n    return this.flkty.selectedIndex;\n  }\n\n  get cells(): number {\n    if (!this.flkty) {\n      return;\n    }\n\n    return this.flkty.cells.length;\n  }\n\n  get slides(): number {\n    if (!this.flkty) {\n      return;\n    }\n\n    return this.flkty['slides'].length;\n  }\n\n  append(el: HTMLElement) {\n    this.appendElements.push(el);\n  }\n\n  prepend(el: HTMLElement) {\n    this.flkty.prepend(el);\n  }\n\n  private updateElements() {\n    if (!this.flkty || this.appendElements.length == 0) {\n      return;\n    }\n\n    this.appendElements.forEach(el => {\n      this.flkty.append(el)\n    });\n    this.appendElements = [];\n\n    this.resize();\n    this.childrenUpdated.emit();\n    this.childrenUpdate = setTimeout(this.updateElements(), this.childrenUpdateInterval);\n  }\n\n  select(index: number, isWrapped = true, isInstant = false) {\n    this.flkty.select(index, isWrapped, isInstant);\n  }\n}\n"]}